<Window x:Class="WpfGuetIPClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:w="clr-namespace:WpfGuetIPClient.ViewModels"
        xmlns:local="clr-namespace:WpfGuetIPClient.Models"
        Title="出校器" Height="350" Width="366" WindowStyle="None" AllowsTransparency="True" ResizeMode="CanMinimize" 
        MouseDown="Window_MouseDown" Background="Transparent" WindowStartupLocation="CenterScreen"
        Icon="Images/ipclient.ico" Activated="activated"
        >

    <Window.Resources>
        
        <local:MoneyConverter x:Key="MoneyConverter"/>
        <local:FlowConverter x:Key="FlowConverter"/>





        <!--<Style x:Key="textStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:03" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="tbk" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <TextBlock x:Name="tbk" Text="{TemplateBinding Text}"/>
                            <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost" Background="AliceBlue"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <StopStoryboard BeginStoryboardName="OnMouseEnter1_BeginStoryboard"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="tbk" Property="Text" Value="000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <ControlTemplate x:Key="miniButtonTemplate" TargetType="Button">
            <Grid Width="18" Height="18">
                <Image RenderOptions.BitmapScalingMode="Fant" x:Name="image" Source="images/mini0.png"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/mini1.png"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/mini1.png"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="closeButtonTemplate" TargetType="Button">
            <Grid Width="18" Height="18">
                <Image RenderOptions.BitmapScalingMode="Fant" x:Name="image" Source="images/close0.png"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/close1.png"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/close1.png"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="playButtonTemplate" TargetType="Button">
            <Grid Width="40" Height="26">
                <Image RenderOptions.BitmapScalingMode="Fant" x:Name="image" Source="images/playNormal.png"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/playMouseOver.png"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="image" Property="Source" Value="images/playPressed.png"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="pauseButtonTemplate" TargetType="Button">
            <Grid Width="40" Height="26">
                <Image x:Name="logicImage" Source="images/pauseNormal.png"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="logicImage" Property="Source" Value="images/pauseMouseOver.png"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="logicImage" Property="Source" Value="images/pausePressed.png"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Storyboard x:Key="leafLeave" RepeatBehavior="Forever">
            <!--小树叶动画-->
            <DoubleAnimation BeginTime="00:00:00" AutoReverse="True" Duration="00:00:02" From="0" To="30" Storyboard.TargetProperty="Angle" Storyboard.TargetName="igSmallLeaf">
            </DoubleAnimation>
            <!--大树叶动画-->
            <DoubleAnimation BeginTime="00:00:00" AutoReverse="True" Duration="00:00:02" From="15" To="-15" Storyboard.TargetProperty="Angle" Storyboard.TargetName="igBigLeaf">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="cloudMove" RepeatBehavior="Forever">
            <!--白云移动-->
            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:20" From="0" To="200" Storyboard.TargetProperty="X" Storyboard.TargetName="igCloud" AutoReverse="False">
            </DoubleAnimation>
            <!--白云透明度-->
            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:14" From="0.9" To="0.1" AutoReverse="False" Storyboard.TargetName="imgCloud" Storyboard.TargetProperty="Opacity">
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources>

    <Grid Margin="0,50,0,0">
        <Border CornerRadius="5" BorderThickness="0" Height="250" Opacity="0.97">
            <Border.Background>
                <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF070741" Offset="0" />
                    <GradientStop Color="#FF06062B" Offset="0.415" />
                    <GradientStop Color="#FF03032B" Offset="0.989" />
                    <GradientStop Color="#FF0B0B4E" Offset="0.204" />
                </LinearGradientBrush>-->
                <ImageBrush ImageSource="Images/loginbody.png" />
            </Border.Background>

        </Border>
        <Label Content="出校器" Foreground="White" FontWeight="Bold" Margin="10,50,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"></Label>
        <Image Source="Images/Sun2.png" Width="105" Height="53" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-6,-25,0,0"></Image>
        <Image Source="Images/yezi2.png" HorizontalAlignment="Left" VerticalAlignment="Top"></Image>
        <Image Source="Images/yezi3.png" Width="68" Height="65" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="117,46,0,0">
            <Image.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="igSmallLeaf"></RotateTransform>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/yezi3.png" Width="40" Height="42" Margin="57,40,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Image.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="igBigLeaf"></RotateTransform>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/cloud.png" Width="190" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-25" x:Name="imgCloud">
            <Image.RenderTransform>
                <TransformGroup>
                    <TranslateTransform x:Name="igCloud"></TranslateTransform>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Button Template="{StaticResource closeButtonTemplate}" Width="18" Height="18" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,55,5,0" Click="closeButtonClick" />
        <Button Template="{StaticResource miniButtonTemplate}" Width="18" Height="18" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,55,23,0" Click="miniButtonClick" />
        <Label Content="{Binding GuetIPModel.Version}" Margin="30,100,250,170" Foreground="White" />
        <Label Content="{Binding GuetIPModel.IpAddress}" Margin="230,100,0,170" Foreground="White"/>

        <TextBlock Text="{Binding GuetIPModel.ConnectInformation}" Margin="35,135,25,140" Foreground="White" />
 
        <Label Content="流量：" Margin="30,160,290,110" Foreground="White"/>
        <Label Content="{Binding Path=GuetIPModel.Flow, Converter={StaticResource FlowConverter}}" Margin="70,160,200,110" Foreground="White"/>
        <Label Content="剩余金额：" Margin="200,160,100,110" Foreground="White"/>
        <Label Content="{Binding Path=GuetIPModel.Money, Converter={StaticResource MoneyConverter}}" Margin="265,160,0,110" Foreground="White"/>
        <Label Content="用户：" Margin="30,190,290,80" Foreground="White"/>

        <Grid Margin="75,190,0,80" HorizontalAlignment="Left">
            <!--<TextBlock Text="{TemplateBinding Property=Text}" />-->
            <TextBox CaretBrush="White"  Foreground="White" x:Name="userNameTextBox" Padding="2" Text="{Binding UserName}" Width="100" Height="23" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Left" TextChanged="userNameChanged"/>
            <Line VerticalAlignment="Bottom" Margin="0,2" Stroke="White" X1="0" Y1="0" X2="95" Y2="0"/>
        </Grid>
        
        
        <Label Content="密码：" Margin="200,190,125,80" Foreground="White"/>

        <Grid Margin="245,190,0,80" HorizontalAlignment="Left">
            <PasswordBox CaretBrush="White" Padding="2" w:PasswordHelper.Attach="True" 
               w:PasswordHelper.Password="{Binding Password, Mode=TwoWay}"  Width="100" Height="23" Foreground="White" BorderThickness="0" Background="Transparent" HorizontalAlignment="Left"/>
            <Line VerticalAlignment="Bottom" Margin="0,2" Stroke="White" X1="0" Y1="0" X2="95" Y2="0"/>
        </Grid>
        
        
        
        <CheckBox Margin="35,43" IsChecked="{Binding IsChecked}"  Content="记住密码" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
        <Button Margin="70,30,0,43" Command="{Binding OpenCommand}" Template="{StaticResource playButtonTemplate}" VerticalAlignment="Bottom"  HorizontalAlignment="Center" IsDefault="True"></Button>
        <Button Margin="110,30,70,43" Command="{Binding CloseCommand}" Template="{StaticResource pauseButtonTemplate}" VerticalAlignment="Bottom"  HorizontalAlignment="Right"></Button>
    </Grid>
</Window>
